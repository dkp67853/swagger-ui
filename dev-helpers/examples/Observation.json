{
  "swagger": "2.0",
  "definitions": {
    "Observation": {
      "description": "FHIR Vital Signs Profile vs-2: If there is no component or hasMember element then either a value[x] or a data absent reason must be present.",
      "properties": {
        "resourceType": {
          "description": "This is a Observation resource",
          "type": "string"
        },
        "id": {
          "description": "Logical id of this artifact",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "text": {
          "description": "A set of rules under which this content was created",
          "$ref": "#/definitions/Narrative"
        },
        "identifier": {
          "description": "A unique identifier assigned to this observation.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "Fulfills plan, proposal or order",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "Part of referenced event",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the result value.",
          "enum": [
            "registered",
            "preliminary",
            "final",
            "amended",
            "corrected",
            "cancelled",
            "entered-in-error",
            "unknown"
          ]
        },
        "category": {
          "description": "A code that classifies the general type of observation being made.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "code": {
          "description": "The code of the observation type",
          "$ref": "#/definitions/CodeableConcept"
        },
        "subject": {
          "description": "Who and/or what the observation is about",
          "$ref": "#/definitions/Reference"
        },
        "focus": {
          "description": "What the observation is about, when it is not about the subject of record",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "encounter": {
          "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made.",
          "$ref": "#/definitions/Reference"
        },
        "effective": {
          "description": "Often just a dateTime for Vital Signs vs-1: if Observation.effective[x] is dateTime and has a value then that value shall be precise to the day",
          "$ref": "#/definitions/dateTime"
        },
        "effectiveDateTime": {
          "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "type": "string"
        },
        "effectivePeriod": {
          "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
          "$ref": "#/definitions/Period"
        },
        "issued": {
          "description": "Date/Time this version was made available",
          "$ref": "#/definitions/instant"
        },
        "performer": {
          "description": "Who was responsible for asserting the observed value as \"true\".",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "valueQuantity": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "string"
        },
        "valueBoolean": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "valueInteger": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "number"
        },
        "valueRange": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "string"
        },
        "valueDateTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "string"
        },
        "valuePeriod": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Period"
        },
        "dataAbsentReason": {
          "description": "Provides a reason why the expected value in the element Observation.value[x] is missing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "interpretation": {
          "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "note": {
          "description": "Comments about the observation or the results.",
          "items": {
            "$ref": "#/definitions/Annotation"
          },
          "type": "array"
        },
        "bodySite": {
          "description": "Indicates the site on the subject's body where the observation was made (i.e. the target site).",
          "$ref": "#/definitions/CodeableConcept"
        },
        "method": {
          "description": "Indicates the mechanism used to perform the observation.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "specimen": {
          "description": "The specimen that was used when this observation was made.",
          "$ref": "#/definitions/Reference"
        },
        "device": {
          "description": "The device used to generate the observation data.",
          "$ref": "#/definitions/Reference"
        },
        "referenceRange": {
          "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used.",
          "items": {
            "$ref": "#/definitions/Observation_ReferenceRange"
          },
          "type": "array"
        },
        "hasMember": {
          "description": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "derivedFrom": {
          "description": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "component": {
          "description": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
          "items": {
            "$ref": "#/definitions/Observation_Component"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": [
        "code",
        "resourceType"
      ]
    },
    "id": {
      "type": "string",
      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
    },
    "Meta": {
      "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "versionId": {
          "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
          "$ref": "#/definitions/id"
        },
        "lastUpdated": {
          "description": "When the resource last changed - e.g. when the version changed.",
          "$ref": "#/definitions/instant"
        },
        "source": {
          "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
          "$ref": "#/definitions/uri"
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "uri": {
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "code": {
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "Narrative": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "status": {
          "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ]
        },
        "div": {
          "description": "The actual narrative content, a stripped down version of XHTML.",
          "$ref": "#/definitions/xhtml"
        }
      },
      "additionalProperties": false,
      "required": [
        "div"
      ]
    },
    "Identifier": {
      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "use": {
          "description": "The purpose of this identifier.",
          "enum": [
            "usual",
            "official",
            "temp",
            "secondary",
            "old"
          ]
        },
        "type": {
          "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "system": {
          "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
          "$ref": "#/definitions/uri"
        },
        "value": {
          "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
          "$ref": "#/definitions/string"
        },
        "period": {
          "description": "Time period during which identifier is/was valid for use.",
          "$ref": "#/definitions/Period"
        },
        "assigner": {
          "description": "Organization that issued/manages the identifier.",
          "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "Reference": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "reference": {
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
          "$ref": "#/definitions/string"
        },
        "type": {
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
          "$ref": "#/definitions/uri"
        },
        "identifier": {
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
          "$ref": "#/definitions/Identifier"
        },
        "display": {
          "description": "Plain text narrative that identifies the resource in addition to the resource reference.",
          "$ref": "#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "CodeableConcept": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "text": {
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
          "$ref": "#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "Period": {
      "description": "A time period defined by a start and end date and optionally time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "start": {
          "description": "The start of the period. The boundary is inclusive.",
          "$ref": "#/definitions/dateTime"
        },
        "end": {
          "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
          "$ref": "#/definitions/dateTime"
        }
      },
      "additionalProperties": false
    },
    "Timing": {
      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "event": {
          "description": "Identifies specific times when the event occurs.",
          "items": {
            "$ref": "#/definitions/dateTime"
          },
          "type": "array"
        },
        "repeat": {
          "description": "A set of rules that describe when the event is scheduled.",
          "$ref": "#/definitions/Timing_Repeat"
        },
        "code": {
          "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).",
          "$ref": "#/definitions/CodeableConcept"
        }
      },
      "additionalProperties": false
    },
    "instant": {
      "type": "string",
      "description": "An instant in time - known at least to the second"
    },
    "Quantity": {
      "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
          "enum": [
            "<",
            "<=",
            ">=",
            ">"
          ]
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        }
      },
      "additionalProperties": false
    },
    "Range": {
      "description": "A set of ordered Quantities defined by a low and high limit.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "low": {
          "description": "The low limit. The boundary is inclusive.",
          "$ref": "#/definitions/Quantity"
        },
        "high": {
          "description": "The high limit. The boundary is inclusive.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "Ratio": {
      "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "numerator": {
          "description": "The value of the numerator.",
          "$ref": "#/definitions/Quantity"
        },
        "denominator": {
          "description": "The value of the denominator.",
          "$ref": "#/definitions/Quantity"
        }
      },
      "additionalProperties": false
    },
    "SampledData": {
      "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "origin": {
          "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.",
          "$ref": "#/definitions/Quantity"
        },
        "period": {
          "description": "The length of time between sampling times, measured in milliseconds.",
          "$ref": "#/definitions/decimal"
        },
        "factor": {
          "description": "A correction factor that is applied to the sampled data points before they are added to the origin.",
          "$ref": "#/definitions/decimal"
        },
        "lowerLimit": {
          "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit).",
          "$ref": "#/definitions/decimal"
        },
        "upperLimit": {
          "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit).",
          "$ref": "#/definitions/decimal"
        },
        "dimensions": {
          "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.",
          "$ref": "#/definitions/positiveInt"
        },
        "data": {
          "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value.",
          "$ref": "#/definitions/string"
        }
      },
      "additionalProperties": false,
      "required": [
        "origin"
      ]
    },
    "Annotation": {
      "description": "A  text note which also  contains information about who made the statement and when.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "authorReference": {
          "description": "The individual responsible for making the annotation.",
          "$ref": "#/definitions/Reference"
        },
        "authorString": {
          "description": "The individual responsible for making the annotation.",
          "type": "string"
        },
        "time": {
          "description": "Indicates when this particular annotation was made.",
          "$ref": "#/definitions/dateTime"
        },
        "text": {
          "description": "The text of the annotation in markdown format.",
          "$ref": "#/definitions/markdown"
        }
      },
      "additionalProperties": false
    },
    "Observation_ReferenceRange": {
      "description": "Measurements and simple assertions made about a patient, device or other subject.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "low": {
          "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).",
          "$ref": "#/definitions/Quantity"
        },
        "high": {
          "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).",
          "$ref": "#/definitions/Quantity"
        },
        "type": {
          "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "appliesTo": {
          "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "age": {
          "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
          "$ref": "#/definitions/Range"
        },
        "text": {
          "description": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\".",
          "$ref": "#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "Observation_Component": {
      "description": "Measurements and simple assertions made about a patient, device or other subject.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "code": {
          "description": "Describes what was observed. Sometimes this is called the observation \"code\".",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Quantity"
        },
        "valueCodeableConcept": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "valueString": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "string"
        },
        "valueBoolean": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "valueInteger": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "number"
        },
        "valueRange": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Range"
        },
        "valueRatio": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Ratio"
        },
        "valueSampledData": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/SampledData"
        },
        "valueTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "string"
        },
        "valueDateTime": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "type": "string"
        },
        "valuePeriod": {
          "description": "The information determined as a result of making the observation, if the information has a simple value.",
          "$ref": "#/definitions/Period"
        },
        "dataAbsentReason": {
          "description": "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "interpretation": {
          "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "referenceRange": {
          "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.",
          "items": {
            "$ref": "#/definitions/Observation_ReferenceRange"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": [
        "code"
      ]
    },
    "OperationOutcome": {
      "description": "A collection of error, warning, or information messages that result from a system action.",
      "properties": {
        "resourceType": {
          "description": "This is a OperationOutcome resource",
          "type": "string"
        },
        "issue": {
          "description": "An error, warning, or information message that results from a system action.",
          "items": {
            "description": "A collection of error, warning, or information messages that result from a system action.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "$ref": "#/definitions/string"
              },
              "severity": {
                "description": "Indicates whether the issue indicates a variation from successful processing.",
                "enum": [
                  "fatal",
                  "error",
                  "warning",
                  "information"
                ]
              },
              "code": {
                "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
                "enum": [
                  "invalid",
                  "structure",
                  "required",
                  "value",
                  "invariant",
                  "security",
                  "login",
                  "unknown",
                  "expired",
                  "forbidden",
                  "suppressed",
                  "processing",
                  "not-supported",
                  "duplicate",
                  "multiple-matches",
                  "not-found",
                  "deleted",
                  "too-long",
                  "code-invalid",
                  "extension",
                  "too-costly",
                  "business-rule",
                  "conflict",
                  "transient",
                  "lock-error",
                  "no-store",
                  "exception",
                  "timeout",
                  "incomplete",
                  "throttled",
                  "informational"
                ]
              },
              "details": {
                "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
                "$ref": "#/definitions/CodeableConcept"
              },
              "diagnostics": {
                "description": "Additional diagnostic information about the issue.",
                "$ref": "#/definitions/string"
              },
              "location": {
                "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
                "items": {
                  "$ref": "#/definitions/string"
                },
                "type": "array"
              },
              "expression": {
                "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
                "items": {
                  "$ref": "#/definitions/string"
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": [
        "issue",
        "resourceType"
      ]
    },
    "Bundle": {
      "description": "A container for a collection of resources.",
      "properties": {
        "resourceType": {
          "description": "This is a Bundle resource",
          "type": "string"
        },
        "identifier": {
          "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "Indicates the purpose of this bundle - how it is intended to be used.",
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ]
        },
        "timestamp": {
          "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
          "$ref": "#/definitions/instant"
        },
        "total": {
          "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.",
          "$ref": "#/definitions/unsignedInt"
        },
        "link": {
          "description": "A series of links that provide context to this bundle.",
          "items": {
            "description": "A container for a collection of resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "$ref": "#/definitions/string"
              },
              "relation": {
                "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
                "$ref": "#/definitions/string"
              },
              "url": {
                "description": "The reference details for the link.",
                "$ref": "#/definitions/uri"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "entry": {
          "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
          "items": {
            "description": "A container for a collection of resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "$ref": "#/definitions/string"
              },
              "link": {
                "description": "A series of links that provide context to this entry.",
                "items": {
                  "description": "A container for a collection of resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                      "$ref": "#/definitions/string"
                    },
                    "relation": {
                      "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
                      "$ref": "#/definitions/string"
                    },
                    "url": {
                      "description": "The reference details for the link.",
                      "$ref": "#/definitions/uri"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "fullUrl": {
                "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified.",
                "$ref": "#/definitions/uri"
              },
              "resource": {
                "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.",
                "$ref": "#/definitions/Resource"
              },
              "search": {
                "description": "Information about the search process that lead to the creation of this entry.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "$ref": "#/definitions/string"
                  },
                  "mode": {
                    "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
                    "enum": [
                      "match",
                      "include",
                      "outcome"
                    ]
                  },
                  "score": {
                    "description": "When searching, the server's search ranking score for the entry.",
                    "$ref": "#/definitions/decimal"
                  }
                },
                "additionalProperties": false
              },
              "request": {
                "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "$ref": "#/definitions/string"
                  },
                  "method": {
                    "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
                    "enum": [
                      "GET",
                      "HEAD",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH"
                    ]
                  },
                  "url": {
                    "description": "The URL for this entry, relative to the root (the address to which the request is posted).",
                    "$ref": "#/definitions/uri"
                  },
                  "ifNoneMatch": {
                    "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
                    "$ref": "#/definitions/string"
                  },
                  "ifModifiedSince": {
                    "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
                    "$ref": "#/definitions/instant"
                  },
                  "ifMatch": {
                    "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
                    "$ref": "#/definitions/string"
                  },
                  "ifNoneExist": {
                    "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
                    "$ref": "#/definitions/string"
                  }
                },
                "additionalProperties": false
              },
              "response": {
                "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "$ref": "#/definitions/string"
                  },
                  "status": {
                    "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
                    "$ref": "#/definitions/string"
                  },
                  "location": {
                    "description": "The location header created by processing this operation, populated if the operation returns a location.",
                    "$ref": "#/definitions/uri"
                  },
                  "etag": {
                    "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
                    "$ref": "#/definitions/string"
                  },
                  "lastModified": {
                    "description": "The date/time that the resource was modified on the server.",
                    "$ref": "#/definitions/instant"
                  },
                  "outcome": {
                    "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
                    "$ref": "#/definitions/Resource"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "signature": {
          "description": "Digital Signature - base64 encoded. XML-DSig or a JWT.",
          "$ref": "#/definitions/Signature"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "unsignedInt": {
      "type": "number",
      "description": "An integer with a value that is not negative (e.g. >= 0)"
    },
    "Resource": {
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/id"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "$ref": "#/definitions/uri"
        },
        "language": {
          "$ref": "#/definitions/code"
        }
      }
    },
    "Signature": {
      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "type": {
          "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "when": {
          "description": "When the digital signature was signed.",
          "$ref": "#/definitions/instant"
        },
        "who": {
          "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "A reference to an application-usable description of the identity that is represented by the signature.",
          "$ref": "#/definitions/Reference"
        },
        "targetFormat": {
          "description": "A mime type that indicates the technical format of the target resources signed by the signature.",
          "$ref": "#/definitions/code"
        },
        "sigFormat": {
          "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.",
          "$ref": "#/definitions/code"
        },
        "data": {
          "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.",
          "$ref": "#/definitions/base64Binary"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "who"
      ]
    },
    "base64Binary": {
      "type": "string",
      "description": "A stream of bytes"
    },
    "decimal": {
      "type": "number",
      "description": "A rational number with implicit precision"
    },
    "string": {
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "canonical": {
      "type": "string",
      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
    },
    "Coding": {
      "description": "A reference to a code defined by a terminology system.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "system": {
          "description": "The identification of the code system that defines the meaning of the symbol in the code.",
          "$ref": "#/definitions/uri"
        },
        "version": {
          "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
          "$ref": "#/definitions/string"
        },
        "code": {
          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
          "$ref": "#/definitions/code"
        },
        "display": {
          "description": "A representation of the meaning of the code in the system, following the rules of the system.",
          "$ref": "#/definitions/string"
        },
        "userSelected": {
          "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
          "$ref": "#/definitions/boolean"
        }
      },
      "additionalProperties": false
    },
    "xhtml": {
      "description": "xhtml - escaped html (see specfication)",
      "type": "string"
    },
    "dateTime": {
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "Timing_Repeat": {
      "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "boundsDuration": {
          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "$ref": "#/definitions/Duration"
        },
        "boundsRange": {
          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "$ref": "#/definitions/Range"
        },
        "boundsPeriod": {
          "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.",
          "$ref": "#/definitions/Period"
        },
        "count": {
          "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.",
          "$ref": "#/definitions/positiveInt"
        },
        "countMax": {
          "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.",
          "$ref": "#/definitions/positiveInt"
        },
        "duration": {
          "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.",
          "$ref": "#/definitions/decimal"
        },
        "durationMax": {
          "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.",
          "$ref": "#/definitions/decimal"
        },
        "durationUnit": {
          "description": "The units of time for the duration, in UCUM units.",
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ]
        },
        "frequency": {
          "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.",
          "$ref": "#/definitions/positiveInt"
        },
        "frequencyMax": {
          "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.",
          "$ref": "#/definitions/positiveInt"
        },
        "period": {
          "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.",
          "$ref": "#/definitions/decimal"
        },
        "periodMax": {
          "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days.",
          "$ref": "#/definitions/decimal"
        },
        "periodUnit": {
          "description": "The units of time for the period in UCUM units.",
          "enum": [
            "s",
            "min",
            "h",
            "d",
            "wk",
            "mo",
            "a"
          ]
        },
        "dayOfWeek": {
          "description": "If one or more days of week is provided, then the action happens only on the specified day(s).",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "timeOfDay": {
          "description": "Specified time of day for action to take place.",
          "items": {
            "$ref": "#/definitions/time"
          },
          "type": "array"
        },
        "when": {
          "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.",
          "items": {
            "enum": [
              "MORN",
              "MORN.early",
              "MORN.late",
              "NOON",
              "AFT",
              "AFT.early",
              "AFT.late",
              "EVE",
              "EVE.early",
              "EVE.late",
              "NIGHT",
              "PHS",
              "HS",
              "WAKE",
              "C",
              "CM",
              "CD",
              "CV",
              "AC",
              "ACM",
              "ACD",
              "ACV",
              "PC",
              "PCM",
              "PCD",
              "PCV"
            ]
          },
          "type": "array"
        },
        "offset": {
          "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.",
          "$ref": "#/definitions/unsignedInt"
        }
      },
      "additionalProperties": false
    },
    "positiveInt": {
      "type": "number",
      "description": "An integer with a value that is positive (e.g. >0)"
    },
    "markdown": {
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "boolean": {
      "pattern": "^true|false$",
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "Duration": {
      "description": "A length of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "value": {
          "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.",
          "$ref": "#/definitions/decimal"
        },
        "comparator": {
          "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.",
          "enum": [
            "<",
            "<=",
            ">=",
            ">"
          ]
        },
        "unit": {
          "description": "A human-readable form of the unit.",
          "$ref": "#/definitions/string"
        },
        "system": {
          "description": "The identification of the system that provides the coded form of the unit.",
          "$ref": "#/definitions/uri"
        },
        "code": {
          "description": "A computer processable form of the unit in some unit representation system.",
          "$ref": "#/definitions/code"
        }
      },
      "additionalProperties": false
    },
    "time": {
      "type": "string",
      "description": "A time during the day, with no date specified"
    }
  },
  "host": "atdevportal.mphrx.com",
  "basePath": "/minerva/fhir/r4",
  "info": {
    "title": "ObservationFHIRAPI",
    "version": "4.0",
    "description": "Measurements and simple assertions made about a patient, device or other subject."
  },
  "paths": {
    "/Observation": {
      "get": {
        "tags": [
          "Observation"
        ],
        "summary": "Get Observation",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "type": "string",
            "description": "Logical id of this artifact"
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "type": "string",
            "description": "When the resource version last changed"
          },
          {
            "name": "code",
            "in": "query",
            "type": "string",
            "description": "The code of the observation type"
          },
          {
            "name": "date",
            "in": "query",
            "type": "string",
            "description": "Obtained date/time. If the obtained element is a period, a date that falls in the period"
          },
          {
            "name": "identifier",
            "in": "query",
            "type": "string",
            "description": "The unique id for a particular observation"
          },
          {
            "name": "patient",
            "in": "query",
            "type": "string",
            "description": "The subject that the observation is about (if patient)"
          },
          {
            "name": "encounter",
            "in": "query",
            "type": "string",
            "description": "Encounter related to the observation"
          },
          {
            "name": "based-on",
            "in": "query",
            "type": "string",
            "description": "Reference to the service request."
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "The classification of the type of observation"
          },
          {
            "name": "combo-code",
            "in": "query",
            "type": "string",
            "description": "The code of the observation type or component type"
          },
          {
            "name": "combo-data-absent-reason",
            "in": "query",
            "type": "string",
            "description": "The reason why the expected value in the element Observation.value[x] or Observation.component.value[x] is missing."
          },
          {
            "name": "combo-value-concept",
            "in": "query",
            "type": "string",
            "description": "The value or component value of the observation, if the value is a CodeableConcept"
          },
          {
            "name": "combo-value-quantity",
            "in": "query",
            "type": "string",
            "description": "The value or component value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
          },
          {
            "name": "component-code",
            "in": "query",
            "type": "string",
            "description": "The component code of the observation type"
          },
          {
            "name": "component-data-absent-reason",
            "in": "query",
            "type": "string",
            "description": "The reason why the expected value in the element Observation.component.value[x] is missing."
          },
          {
            "name": "component-value-concept",
            "in": "query",
            "type": "string",
            "description": "The value of the component observation, if the value is a CodeableConcept"
          },
          {
            "name": "component-value-quantity",
            "in": "query",
            "type": "string",
            "description": "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
          },
          {
            "name": "data-absent-reason",
            "in": "query",
            "type": "string",
            "description": "The reason why the expected value in the element Observation.value[x] is missing."
          },
          {
            "name": "derived-from",
            "in": "query",
            "type": "string",
            "description": "Related measurements the observation is made from"
          },
          {
            "name": "device",
            "in": "query",
            "type": "string",
            "description": "The Device that generated the observation data."
          },
          {
            "name": "focus",
            "in": "query",
            "type": "string",
            "description": "The focus of an observation when the focus is not the patient of record."
          },
          {
            "name": "has-member",
            "in": "query",
            "type": "string",
            "description": "Related resource that belongs to the Observation group"
          },
          {
            "name": "method",
            "in": "query",
            "type": "string",
            "description": "The method used for the observation"
          },
          {
            "name": "part-of",
            "in": "query",
            "type": "string",
            "description": "Part of referenced event"
          },
          {
            "name": "performer",
            "in": "query",
            "type": "string",
            "description": "Who performed the observation"
          },
          {
            "name": "specimen",
            "in": "query",
            "type": "string",
            "description": "Specimen used for this observation"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "The status of the observation",
            "enum": [
              "registered",
              "preliminary",
              "final",
              "amended",
              "corrected",
              "cancelled",
              "entered-in-error",
              "unknown"
            ]
          },
          {
            "name": "subject",
            "in": "query",
            "type": "string",
            "description": "The subject that the observation is about"
          },
          {
            "name": "value-concept",
            "in": "query",
            "type": "string",
            "description": "The value of the observation, if the value is a CodeableConcept"
          },
          {
            "name": "value-date",
            "in": "query",
            "type": "string",
            "description": "The value of the observation, if the value is a date or period of time"
          },
          {
            "name": "value-quantity",
            "in": "query",
            "type": "string",
            "description": "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
          },
          {
            "name": "value-string",
            "in": "query",
            "type": "string",
            "description": "The value of the observation, if the value is a string, and also searches in CodeableConcept.text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          },
          "400": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      }
    },
    "/Observation/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Observation"
        ],
        "summary": "Retrieve Observation by ID",
        "description": "Retrieve Observation by providing ID",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Observation"
            }
          },
          "400": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      }
    }
  },
  "produces": [
    "text/plain",
    "application/json",
    "application/fhir+json",
    "application/json+fhir",
    "text/json",
    "application/xml",
    "application/fhir+xml",
    "application/xml+fhir",
    "text/xml",
    "text/xml+fhir",
    "application/octet-stream"
  ],
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "Authorization header using the Bearer scheme. Example :: 'Authorization: Bearer {token}'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
