{
  "swagger": "2.0",
  "definitions": {
    "PractitionerRole": {
      "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
      "properties": {
        "resourceType": {
          "description": "This is a PractitionerRole resource",
          "type": "string"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "$ref": "#/definitions/id"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "#/definitions/Narrative"
        },
        "identifier": {
          "description": "Business Identifiers that are specific to a role/location.",
          "items": {
            "$ref": "#/definitions/Identifier"
          },
          "type": "array"
        },
        "active": {
          "description": "Whether this practitioner role record is in active use.",
          "$ref": "#/definitions/boolean"
        },
        "period": {
          "description": "The period during which the person is authorized to act as a practitioner in these role(s) for the organization.",
          "$ref": "#/definitions/Period"
        },
        "practitioner": {
          "description": "Practitioner that is able to provide the defined services for the organization.",
          "$ref": "#/definitions/Reference"
        },
        "organization": {
          "description": "The organization where the Practitioner performs the roles associated.",
          "$ref": "#/definitions/Reference"
        },
        "code": {
          "description": "Roles which this practitioner is authorized to perform for the organization.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "specialty": {
          "description": "Specific specialty of the practitioner.",
          "items": {
            "$ref": "#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "location": {
          "description": "The location(s) at which this practitioner provides care.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "healthcareService": {
          "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s).",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        },
        "telecom": {
          "description": "Contact details that are specific to the role/location/service.",
          "items": {
            "$ref": "#/definitions/ContactPoint"
          },
          "type": "array"
        },
        "availableTime": {
          "description": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
          "items": {
            "$ref": "#/definitions/PractitionerRole_AvailableTime"
          },
          "type": "array"
        },
        "notAvailable": {
          "description": "The practitioner is not available or performing this role during this period of time due to the provided reason.",
          "items": {
            "$ref": "#/definitions/PractitionerRole_NotAvailable"
          },
          "type": "array"
        },
        "availabilityExceptions": {
          "description": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.",
          "$ref": "#/definitions/string"
        },
        "endpoint": {
          "description": "Technical endpoints providing access to services operated for the practitioner with this role.",
          "items": {
            "$ref": "#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "id": {
      "type": "string",
      "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
    },
    "Meta": {
      "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "versionId": {
          "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.",
          "$ref": "#/definitions/id"
        },
        "lastUpdated": {
          "description": "When the resource last changed - e.g. when the version changed.",
          "$ref": "#/definitions/instant"
        },
        "source": {
          "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.",
          "$ref": "#/definitions/uri"
        },
        "profile": {
          "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].",
          "items": {
            "$ref": "#/definitions/canonical"
          },
          "type": "array"
        },
        "security": {
          "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "tag": {
          "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        }
      },
      "additionalProperties": false
    },
    "uri": {
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "code": {
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "Narrative": {
      "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "status": {
          "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.",
          "enum": [
            "generated",
            "extensions",
            "additional",
            "empty"
          ]
        },
        "div": {
          "description": "The actual narrative content, a stripped down version of XHTML.",
          "$ref": "#/definitions/xhtml"
        }
      },
      "additionalProperties": false,
      "required": [
        "div"
      ]
    },
    "Identifier": {
      "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "use": {
          "description": "The purpose of this identifier.",
          "enum": [
            "usual",
            "official",
            "temp",
            "secondary",
            "old"
          ]
        },
        "type": {
          "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.",
          "$ref": "#/definitions/CodeableConcept"
        },
        "system": {
          "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.",
          "$ref": "#/definitions/uri"
        },
        "value": {
          "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.",
          "$ref": "#/definitions/string"
        },
        "period": {
          "description": "Time period during which identifier is/was valid for use.",
          "$ref": "#/definitions/Period"
        },
        "assigner": {
          "description": "Organization that issued/manages the identifier.",
          "$ref": "#/definitions/Reference"
        }
      },
      "additionalProperties": false
    },
    "boolean": {
      "type": "boolean",
      "description": "Value of \"true\" or \"false\""
    },
    "Period": {
      "description": "A time period defined by a start and end date and optionally time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "start": {
          "description": "The start of the period. The boundary is inclusive.",
          "$ref": "#/definitions/dateTime"
        },
        "end": {
          "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.",
          "$ref": "#/definitions/dateTime"
        }
      },
      "additionalProperties": false
    },
    "Reference": {
      "description": "A reference from one resource to another.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "reference": {
          "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.",
          "$ref": "#/definitions/string"
        },
        "type": {
          "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).",
          "$ref": "#/definitions/uri"
        },
        "identifier": {
          "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.",
          "$ref": "#/definitions/Identifier"
        },
        "display": {
          "description": "Plain text narrative that identifies the resource in addition to the resource reference.",
          "$ref": "#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "CodeableConcept": {
      "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "coding": {
          "description": "A reference to a code defined by a terminology system.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "text": {
          "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.",
          "$ref": "#/definitions/string"
        }
      },
      "additionalProperties": false
    },
    "ContactPoint": {
      "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "system": {
          "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.",
          "enum": [
            "phone",
            "fax",
            "email",
            "pager",
            "url",
            "sms",
            "other"
          ]
        },
        "value": {
          "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).",
          "$ref": "#/definitions/string"
        },
        "use": {
          "description": "Identifies the purpose for the contact point.",
          "enum": [
            "home",
            "work",
            "temp",
            "old",
            "mobile"
          ]
        },
        "rank": {
          "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.",
          "$ref": "#/definitions/positiveInt"
        },
        "period": {
          "description": "Time period when the contact point was/is in use.",
          "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "PractitionerRole_AvailableTime": {
      "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "daysOfWeek": {
          "description": "Indicates which days of the week are available between the start and end Times.",
          "items": {
            "$ref": "#/definitions/code"
          },
          "type": "array"
        },
        "allDay": {
          "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
          "$ref": "#/definitions/boolean"
        },
        "availableStartTime": {
          "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.",
          "$ref": "#/definitions/time"
        },
        "availableEndTime": {
          "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.",
          "$ref": "#/definitions/time"
        }
      },
      "additionalProperties": false
    },
    "PractitionerRole_NotAvailable": {
      "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "description": {
          "description": "The reason that can be presented to the user as to why this time is not available.",
          "$ref": "#/definitions/string"
        },
        "during": {
          "description": "Service is not available (seasonally or for a public holiday) from this date.",
          "$ref": "#/definitions/Period"
        }
      },
      "additionalProperties": false
    },
    "string": {
      "type": "string",
      "description": "A sequence of Unicode characters"
    },
    "OperationOutcome": {
      "description": "A collection of error, warning, or information messages that result from a system action.",
      "properties": {
        "resourceType": {
          "description": "This is a OperationOutcome resource",
          "type": "string"
        },
        "issue": {
          "description": "An error, warning, or information message that results from a system action.",
          "items": {
            "description": "A collection of error, warning, or information messages that result from a system action.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "$ref": "#/definitions/string"
              },
              "severity": {
                "description": "Indicates whether the issue indicates a variation from successful processing.",
                "enum": [
                  "fatal",
                  "error",
                  "warning",
                  "information"
                ]
              },
              "code": {
                "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
                "enum": [
                  "invalid",
                  "structure",
                  "required",
                  "value",
                  "invariant",
                  "security",
                  "login",
                  "unknown",
                  "expired",
                  "forbidden",
                  "suppressed",
                  "processing",
                  "not-supported",
                  "duplicate",
                  "multiple-matches",
                  "not-found",
                  "deleted",
                  "too-long",
                  "code-invalid",
                  "extension",
                  "too-costly",
                  "business-rule",
                  "conflict",
                  "transient",
                  "lock-error",
                  "no-store",
                  "exception",
                  "timeout",
                  "incomplete",
                  "throttled",
                  "informational"
                ]
              },
              "details": {
                "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
                "$ref": "#/definitions/CodeableConcept"
              },
              "diagnostics": {
                "description": "Additional diagnostic information about the issue.",
                "$ref": "#/definitions/string"
              },
              "location": {
                "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
                "items": {
                  "$ref": "#/definitions/string"
                },
                "type": "array"
              },
              "expression": {
                "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
                "items": {
                  "$ref": "#/definitions/string"
                },
                "type": "array"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "additionalProperties": false,
      "required": [
        "issue",
        "resourceType"
      ]
    },
    "Bundle": {
      "description": "A container for a collection of resources.",
      "properties": {
        "resourceType": {
          "description": "This is a Bundle resource",
          "type": "string"
        },
        "identifier": {
          "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server.",
          "$ref": "#/definitions/Identifier"
        },
        "type": {
          "description": "Indicates the purpose of this bundle - how it is intended to be used.",
          "enum": [
            "document",
            "message",
            "transaction",
            "transaction-response",
            "batch",
            "batch-response",
            "history",
            "searchset",
            "collection"
          ]
        },
        "timestamp": {
          "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
          "$ref": "#/definitions/instant"
        },
        "total": {
          "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.",
          "$ref": "#/definitions/unsignedInt"
        },
        "link": {
          "description": "A series of links that provide context to this bundle.",
          "items": {
            "description": "A container for a collection of resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "$ref": "#/definitions/string"
              },
              "relation": {
                "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
                "$ref": "#/definitions/string"
              },
              "url": {
                "description": "The reference details for the link.",
                "$ref": "#/definitions/uri"
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "entry": {
          "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
          "items": {
            "description": "A container for a collection of resources.",
            "properties": {
              "id": {
                "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                "$ref": "#/definitions/string"
              },
              "link": {
                "description": "A series of links that provide context to this entry.",
                "items": {
                  "description": "A container for a collection of resources.",
                  "properties": {
                    "id": {
                      "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                      "$ref": "#/definitions/string"
                    },
                    "relation": {
                      "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
                      "$ref": "#/definitions/string"
                    },
                    "url": {
                      "description": "The reference details for the link.",
                      "$ref": "#/definitions/uri"
                    }
                  },
                  "additionalProperties": false
                },
                "type": "array"
              },
              "fullUrl": {
                "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified.",
                "$ref": "#/definitions/uri"
              },
              "resource": {
                "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.",
                "$ref": "#/definitions/Resource"
              },
              "search": {
                "description": "Information about the search process that lead to the creation of this entry.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "$ref": "#/definitions/string"
                  },
                  "mode": {
                    "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
                    "enum": [
                      "match",
                      "include",
                      "outcome"
                    ]
                  },
                  "score": {
                    "description": "When searching, the server's search ranking score for the entry.",
                    "$ref": "#/definitions/decimal"
                  }
                },
                "additionalProperties": false
              },
              "request": {
                "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "$ref": "#/definitions/string"
                  },
                  "method": {
                    "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
                    "enum": [
                      "GET",
                      "HEAD",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH"
                    ]
                  },
                  "url": {
                    "description": "The URL for this entry, relative to the root (the address to which the request is posted).",
                    "$ref": "#/definitions/uri"
                  },
                  "ifNoneMatch": {
                    "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
                    "$ref": "#/definitions/string"
                  },
                  "ifModifiedSince": {
                    "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
                    "$ref": "#/definitions/instant"
                  },
                  "ifMatch": {
                    "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
                    "$ref": "#/definitions/string"
                  },
                  "ifNoneExist": {
                    "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
                    "$ref": "#/definitions/string"
                  }
                },
                "additionalProperties": false
              },
              "response": {
                "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
                "properties": {
                  "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
                    "$ref": "#/definitions/string"
                  },
                  "status": {
                    "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
                    "$ref": "#/definitions/string"
                  },
                  "location": {
                    "description": "The location header created by processing this operation, populated if the operation returns a location.",
                    "$ref": "#/definitions/uri"
                  },
                  "etag": {
                    "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
                    "$ref": "#/definitions/string"
                  },
                  "lastModified": {
                    "description": "The date/time that the resource was modified on the server.",
                    "$ref": "#/definitions/instant"
                  },
                  "outcome": {
                    "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
                    "$ref": "#/definitions/Resource"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "type": "array"
        },
        "signature": {
          "description": "Digital Signature - base64 encoded. XML-DSig or a JWT.",
          "$ref": "#/definitions/Signature"
        }
      },
      "additionalProperties": false,
      "required": [
        "resourceType"
      ]
    },
    "unsignedInt": {
      "type": "number",
      "description": "An integer with a value that is not negative (e.g. >= 0)"
    },
    "Resource": {
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/id"
        },
        "meta": {
          "$ref": "#/definitions/Meta"
        },
        "implicitRules": {
          "$ref": "#/definitions/uri"
        },
        "language": {
          "$ref": "#/definitions/code"
        }
      }
    },
    "Signature": {
      "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "type": {
          "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.",
          "items": {
            "$ref": "#/definitions/Coding"
          },
          "type": "array"
        },
        "when": {
          "description": "When the digital signature was signed.",
          "$ref": "#/definitions/instant"
        },
        "who": {
          "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).",
          "$ref": "#/definitions/Reference"
        },
        "onBehalfOf": {
          "description": "A reference to an application-usable description of the identity that is represented by the signature.",
          "$ref": "#/definitions/Reference"
        },
        "targetFormat": {
          "description": "A mime type that indicates the technical format of the target resources signed by the signature.",
          "$ref": "#/definitions/code"
        },
        "sigFormat": {
          "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.",
          "$ref": "#/definitions/code"
        },
        "data": {
          "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.",
          "$ref": "#/definitions/base64Binary"
        }
      },
      "additionalProperties": false,
      "required": [
        "type",
        "who"
      ]
    },
    "base64Binary": {
      "type": "string",
      "description": "A stream of bytes"
    },
    "decimal": {
      "type": "number",
      "description": "A rational number with implicit precision"
    },
    "instant": {
      "type": "string",
      "description": "An instant in time - known at least to the second"
    },
    "canonical": {
      "type": "string",
      "description": "A URI that is a reference to a canonical URL on a FHIR resource"
    },
    "Coding": {
      "description": "A reference to a code defined by a terminology system.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "$ref": "#/definitions/string"
        },
        "system": {
          "description": "The identification of the code system that defines the meaning of the symbol in the code.",
          "$ref": "#/definitions/uri"
        },
        "version": {
          "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
          "$ref": "#/definitions/string"
        },
        "code": {
          "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).",
          "$ref": "#/definitions/code"
        },
        "display": {
          "description": "A representation of the meaning of the code in the system, following the rules of the system.",
          "$ref": "#/definitions/string"
        },
        "userSelected": {
          "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).",
          "$ref": "#/definitions/boolean"
        }
      },
      "additionalProperties": false
    },
    "xhtml": {
      "description": "xhtml - escaped html (see specfication)",
      "type": "string"
    },
    "dateTime": {
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "positiveInt": {
      "type": "number",
      "description": "An integer with a value that is positive (e.g. >0)"
    },
    "time": {
      "type": "string",
      "description": "A time during the day, with no date specified"
    }
  },
  "host": "atdevportal.mphrx.com",
  "basePath": "/minerva/fhir/r4/",
  "info": {
    "title": "PractitionerRoleFHIRAPI",
    "version": "4.0",
    "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time."
  },
  "paths": {
    "/PractitionerRole": {
      "get": {
        "tags": [
          "PractitionerRole"
        ],
        "summary": "Get PractitionerRole",
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "type": "string",
            "description": "Logical id of this artifact"
          },
          {
            "name": "_lastUpdated",
            "in": "query",
            "type": "string",
            "description": "When the resource version last changed"
          },
          {
            "name": "_profile",
            "in": "query",
            "type": "string",
            "description": "Profiles this resource claims to conform to"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in an email contact\r\n* [Person](person.html): A value in an email contact\r\n* [Practitioner](practitioner.html): A value in an email contact\r\n* [PractitionerRole](practitionerrole.html): A value in an email contact\r\n* [RelatedPerson](relatedperson.html): A value in an email contact\r\n"
          },
          {
            "name": "phone",
            "in": "query",
            "type": "string",
            "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): A value in a phone contact\r\n* [Person](person.html): A value in a phone contact\r\n* [Practitioner](practitioner.html): A value in a phone contact\r\n* [PractitionerRole](practitionerrole.html): A value in a phone contact\r\n* [RelatedPerson](relatedperson.html): A value in a phone contact\r\n"
          },
          {
            "name": "telecom",
            "in": "query",
            "type": "string",
            "description": "Multiple Resources: \r\n\r\n* [Patient](patient.html): The value in any kind of telecom details of the patient\r\n* [Person](person.html): The value in any kind of contact\r\n* [Practitioner](practitioner.html): The value in any kind of contact\r\n* [PractitionerRole](practitionerrole.html): The value in any kind of contact\r\n* [RelatedPerson](relatedperson.html): The value in any kind of contact\r\n"
          },
          {
            "name": "active",
            "in": "query",
            "type": "string",
            "description": "Whether this practitioner role record is in active use"
          },
          {
            "name": "date",
            "in": "query",
            "type": "string",
            "description": "The period during which the practitioner is authorized to perform in these role(s)"
          },
          {
            "name": "endpoint",
            "in": "query",
            "type": "string",
            "description": "Technical endpoints providing access to services operated for the practitioner with this role"
          },
          {
            "name": "identifier",
            "in": "query",
            "type": "string",
            "description": "A practitioner's Identifier"
          },
          {
            "name": "location",
            "in": "query",
            "type": "string",
            "description": "One of the locations at which this practitioner provides care"
          },
          {
            "name": "organization",
            "in": "query",
            "type": "string",
            "description": "The identity of the organization the practitioner represents / acts on behalf of"
          },
          {
            "name": "practitioner",
            "in": "query",
            "type": "string",
            "description": "Practitioner that is able to provide the defined services for the organization"
          },
          {
            "name": "role",
            "in": "query",
            "type": "string",
            "description": "The practitioner can perform this role at for the organization"
          },
          {
            "name": "service",
            "in": "query",
            "type": "string",
            "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s)"
          },
          {
            "name": "specialty",
            "in": "query",
            "type": "string",
            "description": "The practitioner has this specialty at an organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Bundle"
            }
          },
          "400": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      }
    },
    "/PractitionerRole/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "PractitionerRole"
        ],
        "summary": "Retrieve PractitionerRole by ID",
        "description": "Retrieve PractitionerRole by providing ID",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PractitionerRole"
            }
          },
          "400": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "500": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          },
          "default": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/OperationOutcome"
            }
          }
        }
      }
    }
  },
  "produces": [
    "text/plain",
    "application/json",
    "application/fhir+json",
    "application/json+fhir",
    "text/json",
    "application/xml",
    "application/fhir+xml",
    "application/xml+fhir",
    "text/xml",
    "text/xml+fhir",
    "application/octet-stream"
  ],
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "Authorization header using the Bearer scheme. Example :: 'Authorization: Bearer {token}'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
